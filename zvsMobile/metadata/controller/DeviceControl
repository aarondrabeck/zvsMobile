{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "DeviceControl"
    },
    "name": "MyController",
    "designerId": "b98271b0-fa14-47c1-b1b9-9ca1734e7b45",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#deviceControlPanel",
                "designer|targetType": "Ext.Panel",
                "fn": "onControlPanelShow",
                "implHandler": [
                    "if(component.IsLoaded)",
                    "    return;",
                    "",
                    "component.IsLoaded = true;",
                    "",
                    "var deviceRecord = component.getParent().getRecord();",
                    "component.setRecord(deviceRecord);",
                    "var device = deviceRecord.getData();",
                    "",
                    "//Create Device Type Commands",
                    "var typeStore = Ext.getStore('DeviceTypeCommandStore');",
                    "var uri = 'odata4/DeviceTypeCommands/?$filter=DeviceTypeId eq ' + device.DeviceTypeId;",
                    "uri = uri + '&$expand=Options';",
                    "typeStore.getProxy().setUrl(uri);",
                    "typeStore.load({",
                    "    callback: function(records, operation, success) {",
                    "        // the operation object contains all of the details of the load operation",
                    "",
                    "        typeStore.getData().each(function(item){",
                    "            var command = item.raw;",
                    "            zvsMobile.controller.DeviceControl.createControl(command, null, 'DeviceTypeCommand', device, component);",
                    "        });",
                    "    }",
                    "});",
                    "",
                    "//Create Device Commands",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues/?$filter=DeviceId eq '+device.Id+' and Genre eq \\'User\\'&$select=UniqueIdentifier, Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "",
                    "        if (response.status === 200) {",
                    "",
                    "            var result = JSON.parse(response.responseText);",
                    "",
                    "            if(result.value.length === 0)",
                    "                return;",
                    "",
                    "            var values = result.value;",
                    "",
                    "            var commandFilter = '';",
                    "",
                    "            for(i=0; i<values.length; i++) {",
                    "                var value = values[i];",
                    "",
                    "                if(i !== 0 )",
                    "                    commandFilter = commandFilter + ' or';",
                    "",
                    "                commandFilter = commandFilter + ' CustomData2 eq \\''+value.UniqueIdentifier+'\\'';",
                    "            }",
                    "",
                    "            var uri = 'odata4/DeviceCommands/?$filter=DeviceId eq ' + device.Id;",
                    "            uri = uri + ' and ' + commandFilter;",
                    "            uri = uri + '&$expand=Options';",
                    "",
                    "            var store = Ext.getStore('DeviceCommandStore');",
                    "            store.getProxy().setUrl(uri);",
                    "            store.load({",
                    "                callback: function(records, operation, success) {",
                    "                    // the operation object contains all of the details of the load operation",
                    "",
                    "                    store.getData().each(function(item){",
                    "",
                    "                        var defaultValue= null;",
                    "                        for(i=0; i<values.length; i++) {",
                    "                            if(values[i].UniqueIdentifier == item.data.CustomData2)",
                    "                                defaultValue =values[i].Value;",
                    "                        }",
                    "",
                    "                        var command = item.raw;",
                    "                        zvsMobile.controller.DeviceControl.createControl(command, defaultValue, 'DeviceCommand', device, component);",
                    "",
                    "                    });",
                    "                },",
                    "                scope: this",
                    "            });",
                    "        }",
                    "        else {",
                    "            Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error',  result.error.message);",
                    "    }",
                    "});",
                    ""
                ],
                "name": "show"
            },
            "name": "onControlPanelShow",
            "designerId": "099fdbdc-fa1f-4548-ab53-9cfde700176c"
        },
        {
            "type": "staticfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "command, defaultValue, commandType, device, component"
                ],
                "fn": "createControl",
                "implHandler": [
                    "if(command.ArgumentType == 'LIST')",
                    "{",
                    "    var options = [];",
                    "    command.Options.forEach(function(option){",
                    "        options.push({text: option.Name,  value: option.Name});",
                    "    });",
                    "",
                    "    if(defaultValue === null)",
                    "    {",
                    "        defaultValue = '- select -';",
                    "        options.unshift( {text: '- select -',  value: '- select -'});",
                    "    }",
                    "",
                    "    component.add({",
                    "        xtype: 'fieldset',",
                    "        title: command.Name,",
                    "        margin: '5',",
                    "        items: [{",
                    "            xtype: 'selectfield',",
                    "            label: 'Change',",
                    "            value: defaultValue,",
                    "            margin: '5',",
                    "            command: command,",
                    "            commandType: commandType,",
                    "            device: device,",
                    "            options: options",
                    "        }]",
                    "    });",
                    "",
                    "",
                    "}",
                    "else if(command.ArgumentType == 'NONE')",
                    "{",
                    "    var input = component.add({",
                    "        xtype: 'fieldset',",
                    "        title: command.Name,",
                    "        margin: '5',",
                    "        items: [{",
                    "            xtype: 'checkboxfield',",
                    "            label: 'Change',",
                    "            margin: '5',",
                    "            command: command,",
                    "            commandType: commandType,",
                    "            device: device",
                    "        }]",
                    "    });",
                    "}",
                    "else if(command.ArgumentType == 'STRING')",
                    "{",
                    "",
                    "    component.add({",
                    "        xtype: 'fieldset',",
                    "        title: command.Name,",
                    "        margin: '10 5 5 5',",
                    "        items: [",
                    "            {",
                    "                xtype: 'textfield',",
                    "                label: 'Value',",
                    "                clearIcon:false,",
                    "                itemId: 'cmdValue_'+command.Id,",
                    "                value: defaultValue,",
                    "                margin: '10 5 5 5'",
                    "            },",
                    "            {",
                    "                margin: '10',",
                    "                xtype: 'button',",
                    "                text: 'Change',",
                    "                command: command,",
                    "                commandType: commandType,",
                    "                device: device",
                    "            }]",
                    "",
                    "    });",
                    "",
                    "",
                    "}",
                    "else if(command.ArgumentType == 'BOOL')",
                    "{",
                    "",
                    "    component.add({",
                    "        xtype: 'fieldset',",
                    "        title: command.Name,",
                    "        margin: '5',",
                    "        items: [{",
                    "            xtype: 'togglefield',",
                    "            label: 'Change',",
                    "            margin: '5 ',",
                    "            value: defaultValue,",
                    "            command: command,",
                    "            commandType: commandType,",
                    "            device: device",
                    "        }]",
                    "    });",
                    "",
                    "}",
                    "else if(command.ArgumentType == 'BYTE' || command.ArgumentType == 'INTEGER' || command.ArgumentType == 'DECIMAL' || command.ArgumentType == 'SHORT')",
                    "{",
                    "    component.add({",
                    "        xtype: 'fieldset',",
                    "        title: command.Name,",
                    "        margin: '10 5 5 5',",
                    "        items: [",
                    "            {",
                    "                xtype: 'numberfield',",
                    "                label: 'Value',",
                    "                clearIcon:false,",
                    "                itemId: 'cmdValue_'+command.Id,",
                    "                value: defaultValue,",
                    "                margin: '10 5 5 5'",
                    "            },",
                    "            {",
                    "                margin: '10',",
                    "                xtype: 'button',",
                    "                text: 'Change',",
                    "                command: command,",
                    "                commandType: commandType,",
                    "                device: device",
                    "            }]",
                    "",
                    "    });",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "}",
                    ""
                ]
            },
            "name": "createControl",
            "designerId": "aabb1ffd-41d0-4a06-a274-fc7214d5c991"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "devicecontrolpanel selectfield",
                "designer|targetType": "Ext.field.Select",
                "fn": "onSelectfieldChange",
                "implHandler": [
                    "if(newValue === '- select -')",
                    "    return;",
                    "",
                    "var type = selectfield.getInitialConfig().commandType;",
                    "var id = selectfield.getInitialConfig().command.Id;",
                    "var device = selectfield.getInitialConfig().device;",
                    "",
                    "if(type === 'DeviceCommand' || type === 'DeviceTypeCommand')",
                    "{",
                    "    selectfield.disable();",
                    "    zvsMobile.app.executeCommand(id, newValue.toString(), device.Id.toString(), function(success, error){",
                    "        selectfield.enable();",
                    "        if(success)",
                    "        {",
                    "            Ext.toast(success, 3000);",
                    "",
                    "            var deviceStore = Ext.getStore('DeviceStore');",
                    "            deviceStore.needsRefresh = true;",
                    "        }",
                    "        else",
                    "             Ext.toast(error, 3000);",
                    "    });",
                    "}",
                    "",
                    ""
                ],
                "name": "change"
            },
            "name": "onSelectfieldChange",
            "designerId": "faa33035-6ee7-47f0-a79f-a86201db7bd0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "devicecontrolpanel button",
                "designer|targetType": "Ext.Button",
                "fn": "onButtonTap",
                "implHandler": [
                    "",
                    "var command = button.getInitialConfig().command;",
                    "if(command)",
                    "{",
                    "    var btnInitialConfig = button.getInitialConfig();",
                    "    var type = btnInitialConfig.commandType;",
                    "    var id = btnInitialConfig.command.Id;",
                    "    var device = btnInitialConfig.device;",
                    "    var newValue = Ext.ComponentQuery.query('#cmdValue_' + id)[0].getValue();",
                    "",
                    "",
                    "    if(type === 'DeviceCommand' || type === 'DeviceTypeCommand')",
                    "    {        ",
                    "        if(command.ArgumentType == 'STRING')",
                    "        {",
                    "            if(newValue === null)",
                    "            {",
                    "                Ext.toast('Input not valid.', 2000);",
                    "                return;",
                    "            }",
                    "",
                    "            button.disable();",
                    "            zvsMobile.app.executeCommand(id, newValue.toString(), device.Id.toString(), function(success, error){",
                    "                button.enable();",
                    "                if(success)",
                    "                {",
                    "                    Ext.toast(success, 3000);",
                    "                    var deviceStore = Ext.getStore('DeviceStore');",
                    "                    deviceStore.needsRefresh = true;",
                    "                }",
                    "                else",
                    "                    Ext.toast(error, 3000);",
                    "",
                    "            });",
                    "        }",
                    "        else if(command.ArgumentType == 'BYTE' || command.ArgumentType == 'INTEGER' || command.ArgumentType == 'DECIMAL' || command.ArgumentType == 'SHORT')",
                    "        {            ",
                    "            var intRegex = /^\\d+$/;",
                    "            if(newValue === null || newValue === '' ||",
                    "               ((newValue < 0 || newValue >255) && command.ArgumentType == 'BYTE')",
                    "               //|| (item.data.ArgumentType == 'INTEGER' && intRegex.test(someNumber))",
                    "              )",
                    "            {",
                    "                Ext.toast('Input not valid.', 2000);",
                    "                return;",
                    "            }",
                    "",
                    "            button.disable();",
                    "            zvsMobile.app.executeCommand(id, newValue.toString(), device.Id.toString(), function(success, error){",
                    "                button.enable();",
                    "                if(success)",
                    "                    {",
                    "                        Ext.toast(success, 3000);",
                    "                        var deviceStore = Ext.getStore('DeviceStore');",
                    "                        deviceStore.needsRefresh = true;",
                    "                    }",
                    "                else",
                    "                    Ext.toast(error, 3000);",
                    "            });",
                    "",
                    "        }",
                    "    }",
                    "}"
                ],
                "name": "tap"
            },
            "name": "onButtonTap",
            "designerId": "72908ed9-c14a-40d2-a0c8-1b7de9c05a15"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "devicecontrolpanel togglefield",
                "designer|targetType": "Ext.field.Toggle",
                "fn": "onToggleFieldChange",
                "implHandler": [
                    "var type = togglefield.getInitialConfig().commandType;",
                    "var id = togglefield.getInitialConfig().command.Id;",
                    "var device = togglefield.getInitialConfig().device;",
                    "",
                    "if(type === 'DeviceCommand' || type === 'DeviceTypeCommand')",
                    "{",
                    "    togglefield.disable();",
                    "    zvsMobile.app.executeCommand(id, newValue> 0 ? 'true':'false', device.Id.toString(), function(success, error){",
                    "        togglefield.enable();",
                    "        if(success){",
                    "            Ext.toast(success, 3000);",
                    "            var deviceStore = Ext.getStore('DeviceStore');",
                    "            deviceStore.needsRefresh = true;",
                    "        }",
                    "        else",
                    "            Ext.toast(error, 3000);",
                    "    });",
                    "}",
                    "",
                    ""
                ],
                "name": "change"
            },
            "name": "onToggleFieldChange",
            "designerId": "a67e04ea-9d7b-45de-b8aa-349462559231"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "devicecontrolpanel checkboxfield",
                "designer|targetType": "Ext.field.Checkbox",
                "fn": "checkboxfieldChange",
                "implHandler": [
                    "var type = checkboxfield.getInitialConfig().commandType;",
                    "var id = checkboxfield.getInitialConfig().command.Id;",
                    "var device = checkboxfield.getInitialConfig().device;",
                    "",
                    "if(type === 'DeviceCommand' || type === 'DeviceTypeCommand')",
                    "{",
                    "    //checkboxfield.disable();",
                    "    zvsMobile.app.executeCommand(id, newValue.toString(), device.Id.toString(), function(success, error){",
                    "        //checkboxfield.enable();",
                    "        if(success)",
                    "        {",
                    "            Ext.toast(success, 3000);",
                    "            var deviceStore = Ext.getStore('DeviceStore');",
                    "            deviceStore.needsRefresh = true;",
                    "        }",
                    "        else",
                    "            Ext.toast(error, 3000);",
                    "    });",
                    "",
                    "",
                    "    checkboxfield.suspendEvents();",
                    "    setTimeout(function(){checkboxfield.uncheck();",
                    "                          checkboxfield.resumeEvents(true);}, 900);",
                    "",
                    "}"
                ],
                "name": "change"
            },
            "name": "checkboxfieldChange",
            "designerId": "04ae4986-28ee-4d14-91d7-6dd889db1e34"
        }
    ]
}