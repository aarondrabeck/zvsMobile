{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Devices"
    },
    "name": "MyController",
    "designerId": "6ce882fa-eb1d-4863-9c06-c76d93e27216",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "dataview#deviceDataview",
                "designer|targetType": "Ext.dataview.DataView",
                "fn": "onDataviewItemTap",
                "implHandler": [
                    "var mainView = this.getMainView();",
                    "var valuesStore = Ext.getStore('DeviceValuesStore');",
                    "valuesStore.filter('DeviceId', record.data.Id);",
                    "",
                    "valuesStore.load();",
                    "",
                    "var device = record.data;",
                    "",
                    "mainView.push({",
                    "    xtype: 'devicedetailstabpanel',",
                    "    title: device.Name,",
                    "    data: device",
                    "});"
                ],
                "name": "itemtap"
            },
            "name": "onDataviewItemTap",
            "designerId": "d0522694-13c8-42c5-9e78-da8fb488bf72"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainView",
                "selector": "#mainView"
            },
            "name": "mainView",
            "designerId": "47c4e436-8611-4bff-97fd-b57fdd686044"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#devicesReloadBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onReloadTap",
                "implHandler": [
                    "var deviceStore = Ext.getStore('DeviceStore');",
                    "deviceStore.load();"
                ],
                "name": "tap"
            },
            "name": "onReloadTap",
            "designerId": "eb3098de-7923-45d3-9165-8485b976891d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "dataview#deviceDataview",
                "designer|targetType": "Ext.dataview.DataView",
                "fn": "onDataviewRefresh",
                "implHandler": [
                    "var locationNames = [];",
                    "var segButton = this.getFilterSegmentedButton();",
                    "",
                    "var deviceStore = Ext.getStore('DeviceStore');",
                    "var toolbar = this.getDeviceToolbar();",
                    "if(deviceStore.getFilters().length === 0 && segButton.getItems().length == 1)",
                    "{",
                    "    //Create list without duplicates",
                    "    deviceStore.each(function(element) {",
                    "        if(locationNames.indexOf(element.data.Location) === -1)",
                    "            locationNames.push(element.data.Location);",
                    "    });",
                    "",
                    "    locationNames.sort();",
                    "",
                    "    var buttons = [];",
                    "    locationNames.forEach(function(value, index, array) {",
                    "",
                    "        var existingFilters = segButton.getItems();",
                    "        buttons.push({ text: value, locationFilter:value });",
                    "    });",
                    "    segButton.add(buttons);",
                    "}"
                ],
                "name": "refresh"
            },
            "name": "onDataviewRefresh",
            "designerId": "62fd5231-f582-429a-96d3-afa1576d8abf"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "segmentedbutton#filterSegmentedButton",
                "designer|targetType": "Ext.SegmentedButton",
                "fn": "onSegmentedbuttonToggle",
                "implHandler": [
                    "if(!isPressed)",
                    "    return;",
                    "",
                    "var deviceStore = Ext.getStore('DeviceStore');",
                    "var filter = button.locationFilter;",
                    "if(filter)",
                    "            {",
                    "                if(filter == 'all')",
                    "                    deviceStore.clearFilter();",
                    "                else",
                    "                    deviceStore.filter('Location', filter);",
                    "            }"
                ],
                "name": "toggle"
            },
            "name": "onSegmentedbuttonToggle",
            "designerId": "cef6ff2e-9edb-4f2b-8b33-c218cdf788e1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "tabpanel#deviceDetailsTabPanel",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabpanelUpdatedata",
                "implHandler": [
                    ""
                ],
                "name": "updatedata"
            },
            "name": "onTabpanelUpdatedata",
            "designerId": "4a3fdede-d0d4-4abf-a84e-453b69584d0a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "sliderfield#dimmerSlider",
                "designer|targetType": "Ext.field.Slider",
                "fn": "onSliderfieldChange",
                "implHandler": [
                    "//dimmerSlider",
                    "var panel = me.up('#dimmerControlPanel');",
                    "var device = panel.getData();",
                    "",
                    "Ext.Ajax.request({",
                    "    url: zvsMobile.app.getBaseUrl() + 'odata4/DeviceCommands/?$filter=contains(UniqueIdentifier, \\'DYNAMIC_CMD_BASIC\\') and DeviceId eq '+ device.Id,",
                    "    method: 'GET',",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken':zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        if (result.value.length == 1) {",
                    "            var commandId = result.value[0].Id;",
                    "            Ext.Ajax.request({",
                    "                url: zvsMobile.app.getBaseUrl() + 'odata4/DeviceCommands('+commandId+')/Actions.Execute',",
                    "                method: 'POST',",
                    "                headers: {",
                    "                    'Content-Type': 'application/json',",
                    "                    'X-zvsToken':zvsMobile.app.getToken()",
                    "                },",
                    "                jsonData: {",
                    "                    Argument: newValue.toString(),",
                    "                    Argument2: null",
                    "                },",
                    "                success: function (response, opts) {",
                    "                    var result = JSON.parse(response.responseText);",
                    "                    if (result.value) {",
                    "                        panel.setSuccess(result.value);",
                    "",
                    "                    }",
                    "                    else {",
                    "                        panel.setError('Error setting command.');",
                    "                    }",
                    "                },",
                    "                failure: function (response, opts) {",
                    "                    var result = JSON.parse(response.responseText);",
                    "",
                    "                    panel.setError(result.error.message);",
                    "                }",
                    "            });",
                    "",
                    "        }",
                    "        else {",
                    "            panel.setError('Device command not found.');",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        panel.setError(result.error.message);",
                    "    }",
                    "});"
                ],
                "name": "change"
            },
            "name": "onSliderfieldChange",
            "designerId": "26292a4c-102b-415f-8b16-81cc1d5d9d9c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "deviceDetailsTabPanel",
                "selector": "tabpanel#deviceDetailsTabPanel"
            },
            "name": "deviceDetailsTabPanel",
            "designerId": "680f921f-1379-447c-9eb4-b7d2e1e782c0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "switchControlPanel",
                "selector": "panel#switchControlPanel"
            },
            "name": "switchControlPanel",
            "designerId": "3102b243-a125-42e9-b79e-c7b35309db36"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "thermoControlPanel",
                "selector": "panel#thermoControlPanel"
            },
            "name": "thermoControlPanel",
            "designerId": "e93eb43d-5e2f-4fde-9336-c4f7ee06b90b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dimmerControlPanel",
                "selector": "panel#dimmerControlPanel"
            },
            "name": "dimmerControlPanel",
            "designerId": "47caf0cf-1ca5-4a40-b07c-ba7d65d22ff0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "togglefield",
                "designer|targetType": "Ext.field.Toggle",
                "fn": "onOffSwitchTogglefieldChange",
                "implHandler": [
                    "var panel = togglefield.up('#switchControlPanel');",
                    "        var device = panel.getData();",
                    "        var uId = newValue === 0 ? 'TURNOFF' : 'TURNON';",
                    "",
                    "",
                    "        Ext.Ajax.request({",
                    "            url: zvsMobile.app.getBaseUrl() + 'odata4/DeviceTypeCommands/?$filter=UniqueIdentifier eq \\''+uId+'\\' and DeviceTypeId eq '+ device.DeviceTypeId + '&$select=Id',",
                    "",
                    "            //odata4/DeviceCommands/?$filter=CustomData1 eq \\'Basic\\' and DeviceId eq '+ device.Id + '&$select=Id',",
                    "            method: 'GET',",
                    "            headers: {",
                    "                'Content-Type': 'application/json',",
                    "                'X-zvsToken': zvsMobile.app.getToken()",
                    "            },",
                    "            success: function (response, opts) {",
                    "                var result = JSON.parse(response.responseText);",
                    "                if (result.value.length == 1) {",
                    "                    var commandId = result.value[0].Id;",
                    "                    Ext.Ajax.request({",
                    "                        url: zvsMobile.app.getBaseUrl() + 'odata4/DeviceTypeCommands('+commandId+')/Actions.Execute',",
                    "                        method: 'POST',",
                    "                        headers: {",
                    "                            'Content-Type': 'application/json',",
                    "                            'X-zvsToken':zvsMobile.app.getToken()",
                    "                        },",
                    "                        jsonData: {",
                    "                            Argument: null,",
                    "                            Argument2: device.Id.toString()",
                    "                        },",
                    "                        success: function (response, opts) {",
                    "                            var result = JSON.parse(response.responseText);",
                    "                            if (result.value) {",
                    "                                panel.setSuccess(result.value);",
                    "                            }",
                    "                            else {",
                    "                                panel.setError('Error setting command.');",
                    "                            }",
                    "                        },",
                    "                        failure: function (response, opts) {",
                    "                            var result = JSON.parse(response.responseText);",
                    "                            panel.setError(result.error.message);",
                    "                        }",
                    "                    });",
                    "",
                    "                }",
                    "                else {",
                    "                    panel.setError('Device command not found.');",
                    "                }",
                    "            },",
                    "            failure: function (response, opts) {",
                    "                var result = JSON.parse(response.responseText);",
                    "                panel.setError(result.error.message);",
                    "            }",
                    "        });"
                ],
                "name": "change"
            },
            "name": "onOffSwitchTogglefieldChange",
            "designerId": "374559fa-c860-4962-aab7-aae8f6fe9778"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "filterSegmentedButton",
                "selector": "segmentedbutton#filterSegmentedButton"
            },
            "name": "filterSegmentedButton",
            "designerId": "54a5249d-9493-4bee-8fa3-8f3dbfd7f044"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "deviceToolbar",
                "selector": "toolbar#deviceToolbar"
            },
            "name": "deviceToolbar",
            "designerId": "1cd3ee3c-d4f0-4358-8fe1-f188665be5af"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#devicesPanel",
                "designer|targetType": "Ext.Panel",
                "fn": "onPanelInitialize",
                "implHandler": [
                    " var deviceStore = Ext.getStore('DeviceStore');",
                    "        deviceStore.load();"
                ],
                "name": "initialize"
            },
            "name": "onPanelInitialize",
            "designerId": "98b9126d-23de-4dac-b5f9-da592bdd0934"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "tabpanel#deviceDetailsTabPanel",
                "designer|targetType": "Ext.tab.Panel",
                "fn": "onTabpanelInitialize",
                "implHandler": [
                    "var device = component.getData();",
                    "",
                    "var xtype;",
                    "if(device.type.UniqueIdentifier == 'SWITCH')",
                    "{",
                    "    xtype = 'switchcontrolpanel';",
                    "}",
                    "else if(device.type.UniqueIdentifier == 'DIMMER')",
                    "{",
                    "    xtype = 'dimmercontrolpanel';",
                    "}",
                    "else if(device.type.UniqueIdentifier == 'THERMOSTAT')",
                    "{",
                    "    xtype = 'thermocontrolpanel';",
                    "}",
                    "",
                    "var item = ",
                    "    {xtype: xtype,",
                    "                  title: 'Action',",
                    "                  iconCls: 'action'",
                    "                 };",
                    "",
                    "component.setActiveItem(item);",
                    "component.getActiveItem().setRecord(device);"
                ],
                "name": "initialize"
            },
            "name": "onTabpanelInitialize",
            "designerId": "ef971069-43b6-40a6-ad74-55d3437990ee"
        }
    ]
}