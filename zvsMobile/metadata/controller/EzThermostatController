{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "EzThermostatController"
    },
    "name": "MyController",
    "configAlternates": {
        "heatTimer": "object"
    },
    "designerId": "6de396cb-44ac-4440-8301-ccf805cc8cb5",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "panel#thermostatEzControl",
                "designer|targetType": "Ext.Panel",
                "fn": "onPanelInitialize",
                "implHandler": [
                    "var controller = zvsMobile.app.getController('EzThermostatController');",
                    "controller.inputDelayTimer = null;",
                    "",
                    "",
                    "var device = component.getData();",
                    "var tempLabel = component.down('#temp-text');",
                    "",
                    "tempLabel.setHtml(device.CurrentLevelInt);",
                    "",
                    "controller.fetchSetPoints(device.Id, component);",
                    "",
                    "//Get Fan Mode",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues?$filter=DeviceId eq '+device.Id+' and Name eq \\'Fan Mode\\'&$select=Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var mode = component.down('#fan-mode');",
                    "        if (response.status === 200) {",
                    "            var result = JSON.parse(response.responseText);",
                    "",
                    "            if(result.value.length === 0)",
                    "            {",
                    "                return;",
                    "            }",
                    "",
                    "",
                    "            var value = result.value[0].Value;",
                    "            if(value == 'On Low')",
                    "                {",
                    "                    mode.setPressedButtons(component.down('#fan-on-button'));",
                    "                }",
                    "            else if(value == 'Auto Low')",
                    "                {",
                    "                    mode.setPressedButtons(component.down('#fan-auto-button'));",
                    "                }",
                    "",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error',  result.error.message);",
                    "    }",
                    "});",
                    "",
                    "//Get ESM",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues?$filter=DeviceId eq '+device.Id+' and Name eq \\'SetBack Mode\\'&$select=Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var mode = component.down('#esm-mode');",
                    "        if (response.status === 200) {",
                    "            var result = JSON.parse(response.responseText);",
                    "",
                    "            if(result.value.length === 0)",
                    "            {",
                    "                return;",
                    "            }",
                    "",
                    "            var value = result.value[0].Value;",
                    "            if(value == '2')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#esm-button'));",
                    "            }",
                    "            else if(value == '0')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#comfort-button'));",
                    "            }",
                    "",
                    "",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error',  result.error.message);",
                    "    }",
                    "});",
                    "",
                    "//Get Mode",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues?$filter=DeviceId eq '+device.Id+' and Name eq \\'Mode\\'&$select=Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var mode = component.down('#mode');",
                    "        if (response.status === 200) {",
                    "            var result = JSON.parse(response.responseText);",
                    "",
                    "            if(result.value.length === 0)",
                    "            {",
                    "                return;",
                    "            }",
                    "",
                    "            var value = result.value[0].Value;",
                    "            if(value == 'Off')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#mode-off-button'));",
                    "            }",
                    "            else if(value == 'Heat')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#mode-heat-button'));",
                    "            }",
                    "            else if(value == 'Cool')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#mode-cool-button'));",
                    "            }",
                    "            else if(value == 'Auto')",
                    "            {",
                    "                mode.setPressedButtons(component.down('#mode-auto-button'));",
                    "            }",
                    "",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error',  result.error.message);",
                    "    }",
                    "});",
                    "",
                    "//Set Weather",
                    "var store = Ext.getStore('Settings');",
                    "var setting = store.getById(1);",
                    "if(setting && setting.data && setting.data.ZipCode && setting.data.ZipCode !== '')",
                    "{",
                    "",
                    "    Ext.data.JsonP.request({",
                    "        url: 'http://api.worldweatheronline.com/free/v2/weather.ashx',",
                    "        callbackKey: 'callback',",
                    "        params: {",
                    "            key: 'f112aeea8a58c0474f68e7ee5d9f7',",
                    "            q: setting.data.ZipCode,",
                    "            format: 'json'",
                    "        },",
                    "        success: function (response, opts) {",
                    "            var outdoorLabel = component.down('#outdoor-text');",
                    "            if(response.data && response.data.current_condition[0])",
                    "            {",
                    "                var temp = response.data.current_condition[0].temp_F;",
                    "                var humidity = response.data.current_condition[0].humidity;",
                    "                outdoorLabel.setHtml(temp+'&deg; / '+humidity+'% Humidity');",
                    "",
                    "            }",
                    "            else {",
                    "                outdoorLabel.setHtml('-');",
                    "            }",
                    "        },",
                    "        failure: function (response, opts) {",
                    "            var result = JSON.parse(response.responseText);",
                    "            Ext.Msg.alert('Error',  result.error.message);",
                    "        }",
                    "    });",
                    "",
                    "}"
                ],
                "name": "initialize"
            },
            "name": "onPanelInitialize",
            "designerId": "e0738ce9-a8c3-4c26-8e18-4720334e114e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "deviceId",
                    "ezThermoPanel"
                ],
                "fn": "fetchSetPoints",
                "implHandler": [
                    "// Get Current heat point",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues?$filter=DeviceId eq '+deviceId+' and Name eq \\'Heating 1\\'&$select=Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var heatToLabel = ezThermoPanel.down('#heat-to-text');",
                    "            if (response.status === 200) {",
                    "                var result = JSON.parse(response.responseText);",
                    "",
                    "                if(result.value.length === 0)",
                    "                {",
                    "                    heatToLabel.setHtml('?');",
                    "                    return;",
                    "                }",
                    "",
                    "                var value = result.value[0].Value;",
                    "                heatToLabel.setHtml(value);",
                    "            }",
                    "            else {",
                    "                heatToLabel.setHtml('?');",
                    "            }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        outdoorLabel.setHtml('-');",
                    "    }",
                    "});",
                    "",
                    "//Get Cool Point",
                    "Ext.Ajax.request({",
                    "    url: 'odata4/DeviceValues?$filter=DeviceId eq '+deviceId+' and Name eq \\'Cooling 1\\'&$select=Value',",
                    "    method: 'GET',",
                    "    scope : this,",
                    "    headers: {",
                    "        'Content-Type': 'application/json',",
                    "        'X-zvsToken': zvsMobile.app.getToken()",
                    "    },",
                    "    success: function (response, opts) {",
                    "        var coolToLabel = ezThermoPanel.down('#cool-to-text');",
                    "        if (response.status === 200) {",
                    "            var result = JSON.parse(response.responseText);",
                    "",
                    "            if(result.value.length === 0)",
                    "            {",
                    "                coolToLabel.setHtml('?');",
                    "                return;",
                    "            }",
                    "",
                    "            var value = result.value[0].Value;",
                    "            coolToLabel.setHtml(value);",
                    "        }",
                    "        else {",
                    "            coolToLabel.setHtml('?');",
                    "        }",
                    "    },",
                    "    failure: function (response, opts) {",
                    "        var result = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error',  result.error.message);",
                    "    }",
                    "});"
                ]
            },
            "name": "fetchSetPoints",
            "designerId": "3df287c0-56f8-49ae-a52e-be92862a2c15"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#heat-up",
                "designer|targetType": "Ext.Button",
                "fn": "onHeatUpButtonTap",
                "implHandler": [
                    "var heatToText = button.getParent().down('#heat-to-text');",
                    "var value = parseInt(heatToText.getHtml());",
                    "if(value < 255) {",
                    "    var set =value +1;",
                    "    heatToText.setHtml(set);",
                    "",
                    "    var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "    var me = zvsMobile.app.getController('EzThermostatController');",
                    "    clearTimeout(me.inputDelayTimer);",
                    "    me.inputDelayTimer = Ext.Function.defer(me.setHeatPoint, 700,  this, [ deviceId, set]);",
                    "}"
                ],
                "name": "tap"
            },
            "name": "onHeatUpButtonTap",
            "designerId": "57d40aa5-09d3-428b-953e-8cc40639799c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#heat-down",
                "designer|targetType": "Ext.Button",
                "fn": "onHeatDownButtonTap",
                "implHandler": [
                    "var heatToText = button.getParent().down('#heat-to-text');",
                    "var value = parseInt(heatToText.getHtml());",
                    "if(value > 0) {",
                    "    var set =value -1;",
                    "    heatToText.setHtml(set);",
                    "    ",
                    "    var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "    var me = zvsMobile.app.getController('EzThermostatController');",
                    "    clearTimeout(me.inputDelayTimer);",
                    "    me.inputDelayTimer = Ext.Function.defer(me.setHeatPoint, 700,  this, [ deviceId, set]);",
                    "}"
                ],
                "name": "tap"
            },
            "name": "onHeatDownButtonTap",
            "designerId": "d608c4f4-a9c2-426b-89c7-52f847ec6c17"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#cool-up",
                "designer|targetType": "Ext.Button",
                "fn": "onCoolUpButtonTap",
                "implHandler": [
                    " var coolToText = button.getParent().down('#cool-to-text');",
                    "        var value = parseInt(coolToText.getHtml());",
                    "        if(value < 255) {",
                    "           var set =value +1;",
                    "            coolToText.setHtml(set);",
                    "",
                    "            var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "            var me = zvsMobile.app.getController('EzThermostatController');",
                    "            clearTimeout(me.inputDelayTimer);",
                    "            me.inputDelayTimer = Ext.Function.defer(me.setCoolPoint, 700,  this, [ deviceId, set]);",
                    "        }"
                ],
                "name": "tap"
            },
            "name": "onCoolUpButtonTap",
            "designerId": "03a6bdd1-3751-42ca-9735-893ff4b8ea67"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#cool-down",
                "designer|targetType": "Ext.Button",
                "fn": "onCoolDownButtonTap",
                "implHandler": [
                    " var coolToText = button.getParent().down('#cool-to-text');",
                    "        var value = parseInt(coolToText.getHtml());",
                    "        if(value > 0) {",
                    "           var set =value -1;",
                    "            coolToText.setHtml(set);",
                    "",
                    "            var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "            var me = zvsMobile.app.getController('EzThermostatController');",
                    "            clearTimeout(me.inputDelayTimer);",
                    "            me.inputDelayTimer = Ext.Function.defer(me.setCoolPoint, 700,  this, [ deviceId, set]);",
                    "        }"
                ],
                "name": "tap"
            },
            "name": "onCoolDownButtonTap",
            "designerId": "2ccb62fb-36db-4f07-8e72-778c9d153c0d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "deviceId",
                    "value"
                ],
                "fn": "setHeatPoint",
                "implHandler": [
                    " Ext.Ajax.request({",
                    "            url: 'odata4/DeviceCommands/?$filter=DeviceId eq '+deviceId+' and CustomData1 eq \\'Heating 1\\'&$select=Id',",
                    "            method: 'GET',",
                    "            scope : this,",
                    "            headers: {",
                    "                'Content-Type': 'application/json',",
                    "                'X-zvsToken': zvsMobile.app.getToken()",
                    "            },",
                    "            success: function (response, opts) {",
                    "",
                    "                if (response.status === 200) {",
                    "                    var result = JSON.parse(response.responseText);",
                    "",
                    "                    if(result.value.length === 0)",
                    "                    {",
                    "                        Ext.Msg.alert('Error', 'Cannot find command for this device');                       ",
                    "                        return;",
                    "                    }",
                    "",
                    "                    var cmdId = result.value[0].Id;",
                    "                    zvsMobile.app.executeCommand(cmdId, value, deviceId.toString(), function(success, error){",
                    "                        if(success)",
                    "                        {",
                    "                            Ext.Msg.alert('Complete', success);                               ",
                    "                            var deviceStore = Ext.getStore('DeviceStore');",
                    "                            deviceStore.needsRefresh = true;",
                    "                        }",
                    "                        else",
                    "                            Ext.Msg.alert('Error', error);   ",
                    "                    });",
                    "                }",
                    "                else {",
                    "                    Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "                }",
                    "            },",
                    "            failure: function (response, opts) {",
                    "                var result = JSON.parse(response.responseText);",
                    "                Ext.Msg.alert('Error',  result.error.message);",
                    "            }",
                    "        });",
                    ""
                ]
            },
            "name": "setHeatPoint",
            "designerId": "b95c37d0-c8e8-4f3e-8273-100ce7a90bf5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "deviceId",
                    "value"
                ],
                "fn": "setCoolPoint",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "            url: 'odata4/DeviceCommands/?$filter=DeviceId eq '+deviceId+' and CustomData1 eq \\'Cooling 1\\'&$select=Id',",
                    "            method: 'GET',",
                    "            scope : this,",
                    "            headers: {",
                    "                'Content-Type': 'application/json',",
                    "                'X-zvsToken': zvsMobile.app.getToken()",
                    "            },",
                    "            success: function (response, opts) {",
                    "",
                    "                if (response.status === 200) {",
                    "                    var result = JSON.parse(response.responseText);",
                    "",
                    "                    if(result.value.length === 0)",
                    "                    {",
                    "                        Ext.Msg.alert('Error', 'Cannot find command for this device');",
                    "                        return;",
                    "                    }",
                    "",
                    "                    var cmdId = result.value[0].Id;",
                    "                    zvsMobile.app.executeCommand(cmdId, value, deviceId.toString(), function(success, error){",
                    "                        if(success)",
                    "                        {",
                    "                            Ext.Msg.alert('Complete', success);",
                    "                            var deviceStore = Ext.getStore('DeviceStore');",
                    "                            deviceStore.needsRefresh = true;",
                    "                        }",
                    "                        else",
                    "                            Ext.Msg.alert('Error', error);",
                    "                    });",
                    "                }",
                    "                else {",
                    "                    Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "                }",
                    "            },",
                    "            failure: function (response, opts) {",
                    "                var result = JSON.parse(response.responseText);",
                    "                Ext.Msg.alert('Error',  result.error.message);",
                    "            }",
                    "        });",
                    "",
                    ""
                ]
            },
            "name": "setCoolPoint",
            "designerId": "119d558a-1db9-4ca9-a850-f4af31fc58f1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "segmentedbutton#mode",
                "designer|targetType": "Ext.SegmentedButton",
                "fn": "onModeSegmentedbuttonToggle",
                "implHandler": [
                    "segmentedbutton.getInitialConfig().hitCount += 1;",
                    "if(segmentedbutton.getInitialConfig().hitCount > 1 && isPressed) {",
                    "",
                    "    var value = button.getText();",
                    "    var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: 'odata4/DeviceCommands/?$filter=DeviceId eq '+deviceId+' and CustomData1 eq \\'Mode\\'&$select=Id',",
                    "        method: 'GET',",
                    "        scope : this,",
                    "        headers: {",
                    "            'Content-Type': 'application/json',",
                    "            'X-zvsToken': zvsMobile.app.getToken()",
                    "        },",
                    "        success: function (response, opts) {",
                    "",
                    "            if (response.status === 200) {",
                    "                var result = JSON.parse(response.responseText);",
                    "",
                    "                if(result.value.length === 0)",
                    "                {",
                    "                    Ext.Msg.alert('Error', 'Cannot find command for this device');",
                    "                    return;",
                    "                }",
                    "",
                    "                var cmdId = result.value[0].Id;",
                    "                zvsMobile.app.executeCommand(cmdId, value, deviceId.toString(), function(success, error){",
                    "                    if(success)",
                    "                    {",
                    "                        Ext.Msg.alert('Complete', success);",
                    "                        var deviceStore = Ext.getStore('DeviceStore');",
                    "                        deviceStore.needsRefresh = true;",
                    "                    }",
                    "                    else",
                    "                        Ext.Msg.alert('Error', error);",
                    "                });",
                    "            }",
                    "            else {",
                    "                Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "            }",
                    "        },",
                    "        failure: function (response, opts) {",
                    "            var result = JSON.parse(response.responseText);",
                    "            Ext.Msg.alert('Error',  result.error.message);",
                    "        }",
                    "    });",
                    "}",
                    ""
                ],
                "name": "toggle"
            },
            "name": "onModeSegmentedbuttonToggle",
            "designerId": "2f8aef37-e9de-4012-9861-f347e10b391a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "segmentedbutton#fan-mode",
                "designer|targetType": "Ext.SegmentedButton",
                "fn": "onFanModeSegmentedbuttonToggle",
                "implHandler": [
                    "segmentedbutton.getInitialConfig().hitCount += 1;",
                    "if(segmentedbutton.getInitialConfig().hitCount > 1 && isPressed) {",
                    "    var deviceId = button.getParent().up('#thermostatEzControl').getData().Id;",
                    "    var value = button.getText();",
                    "    ",
                    "    Ext.Ajax.request({",
                    "        url: 'odata4/DeviceCommands/?$filter=DeviceId eq '+deviceId+' and CustomData1 eq \\'Fan Mode\\'&$select=Id',",
                    "        method: 'GET',",
                    "        scope : this,",
                    "        headers: {",
                    "            'Content-Type': 'application/json',",
                    "            'X-zvsToken': zvsMobile.app.getToken()",
                    "        },",
                    "        success: function (response, opts) {",
                    "",
                    "            if (response.status === 200) {",
                    "                var result = JSON.parse(response.responseText);",
                    "",
                    "                if(result.value.length === 0)",
                    "                {",
                    "                    Ext.Msg.alert('Error', 'Cannot find command for this device');",
                    "                    return;",
                    "                }",
                    "",
                    "                var cmdId = result.value[0].Id;",
                    "                zvsMobile.app.executeCommand(cmdId, value, deviceId.toString(), function(success, error){",
                    "                    if(success)",
                    "                    {",
                    "                        Ext.Msg.alert('Complete', success);",
                    "                        var deviceStore = Ext.getStore('DeviceStore');",
                    "                        deviceStore.needsRefresh = true;",
                    "                    }",
                    "                    else",
                    "                        Ext.Msg.alert('Error', error);",
                    "                });",
                    "            }",
                    "            else {",
                    "                Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "            }",
                    "        },",
                    "        failure: function (response, opts) {",
                    "            var result = JSON.parse(response.responseText);",
                    "            Ext.Msg.alert('Error',  result.error.message);",
                    "        }",
                    "    });",
                    "}"
                ],
                "name": "toggle"
            },
            "name": "onFanModeSegmentedbuttonToggle",
            "designerId": "59ae7e04-4f8c-4745-8b15-8056bcc2e688"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "segmentedbutton#esm-mode",
                "designer|targetType": "Ext.SegmentedButton",
                "fn": "onSegmentedbuttonToggle",
                "implHandler": [
                    "segmentedbutton.getInitialConfig().hitCount += 1;",
                    "if(segmentedbutton.getInitialConfig().hitCount > 1 && isPressed) {",
                    "",
                    "    var value = button.getText() == 'ESM' ? 2 : 0;",
                    "    var control =button.getParent().up('#thermostatEzControl');",
                    "    var deviceId = control.getData().Id;",
                    "    var controller = zvsMobile.app.getController('EzThermostatController');",
                    "",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: 'odata4/DeviceCommands/?$filter=DeviceId eq '+deviceId+' and CustomData1 eq \\'SetBack Mode\\'&$select=Id',",
                    "        method: 'GET',",
                    "        scope : this,",
                    "        headers: {",
                    "            'Content-Type': 'application/json',",
                    "            'X-zvsToken': zvsMobile.app.getToken()",
                    "        },",
                    "        success: function (response, opts) {",
                    "",
                    "            if (response.status === 200) {",
                    "                var result = JSON.parse(response.responseText);",
                    "",
                    "                if(result.value.length === 0)",
                    "                {",
                    "                    Ext.Msg.alert('Error', 'Cannot find command for this device');",
                    "                    return;",
                    "                }",
                    "",
                    "                var cmdId = result.value[0].Id;",
                    "                zvsMobile.app.executeCommand(cmdId, value, deviceId.toString(), function(success, error){",
                    "                    if(success)",
                    "                    {",
                    "                        Ext.Msg.alert('Complete', success);",
                    "                        Ext.Function.defer(controller.fetchSetPoints, 1500,  this, [ deviceId, control]);                        ",
                    "                    }",
                    "                    else",
                    "                        Ext.Msg.alert('Error', error);",
                    "                });",
                    "            }",
                    "            else {",
                    "                Ext.Msg.alert('Error',  'Unabled to load device commands.');",
                    "            }",
                    "        },",
                    "        failure: function (response, opts) {",
                    "            var result = JSON.parse(response.responseText);",
                    "            Ext.Msg.alert('Error',  result.error.message);",
                    "        }",
                    "    });",
                    "}"
                ],
                "name": "toggle"
            },
            "name": "onSegmentedbuttonToggle",
            "designerId": "9d15df4c-0f9e-473c-a8b4-a136ea211781"
        }
    ]
}