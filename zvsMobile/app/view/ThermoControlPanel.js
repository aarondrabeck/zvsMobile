/*
 * File: app/view/ThermoControlPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('zvsMobile.view.ThermoControlPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.thermocontrolpanel',

    requires: [
        'Ext.field.Text',
        'Ext.Label'
    ],

    config: {
        itemId: 'thermoControlPanel',
        scrollable: 'vertical',
        items: [
            {
                xtype: 'textfield',
                disabled: true,
                id: 'locationTextField2',
                label: 'Room'
            },
            {
                xtype: 'textfield',
                disabled: true,
                id: 'typeTextField2',
                label: 'Type'
            },
            {
                xtype: 'label',
                id: 'feedbackLabel2',
                margin: 10
            },
            {
                xtype: 'label',
                html: 'Thermo'
            }
        ]
    },

    setRecord: function(record) {
        this.callParent(arguments);
        if (record) {

            this.down('#typeTextField').setValue(record.type.Name);
            this.down('#locationTextField').setValue(record.Location);
            this.setData(record);

           // var toggle = this.down('#switchToggle');
          // toggle.suspendEvents();
          //  if(record.CurrentLevelInt > 0)
           //     toggle.setValue(1);
           // else
           //     toggle.setValue(0);
           // toggle.resumeEvents(true);

            //this.down('switchToggle').setDeviceId(record.Id);
            //this.down('#favoriteBtn')[isFavorite ? 'addCls' : 'removeCls']('x-button-pressed');
            //this.down('contactpic').setData(record.data);
        }

    },

    setError: function(message) {
               var feedbackLabel= this.down('#feedbackLabel');
                feedbackLabel.setHtml(message);
               feedbackLabel.setStyle('color:red');
    },

    setSuccess: function(message) {
         var feedbackLabel= this.down('#feedbackLabel');
                feedbackLabel.setHtml(message);
               feedbackLabel.setStyle('color:green');
    }

});