/*
 * File: app/view/GroupControlPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('zvsMobile.view.GroupControlPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.groupcontrolpanel',

    requires: [
        'Ext.Button',
        'Ext.Toolbar',
        'Ext.XTemplate'
    ],

    config: {
        itemId: 'groupControlPanel',
        scrollable: 'vertical',
        tpl: [
            '<div class="group_overview">',
            '    <table class="info-table">',
            '        <thead>',
            '            <tr>',
            '                <th>Device Name</th>',
            '                <th >Location</th>',
            '            </tr>',
            '        </thead>',
            '        <tbody>',
            '            <tpl for="Devices">',
            '                <tr>                    ',
            '                    <td>{Name}</td>',
            '                    <td>{Location}</td>',
            '                </tr>',
            '            </tpl>',
            '        </tbody>',
            '    </table>',
            '</div>',
            ''
        ],
        items: [
            {
                xtype: 'button',
                itemId: 'turnOnBtn',
                margin: '10 10 0 10',
                text: 'Turn On'
            },
            {
                xtype: 'button',
                itemId: 'turnOffBtn',
                margin: '10 10 0 10',
                text: 'Turn Off'
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                itemId: 'feedbackLabel',
                padding: '10px',
                scrollable: 'vertical'
            }
        ]
    },

    setError: function(message) {
        var feedbackLabel= this.down('#feedbackLabel');
        feedbackLabel.setHtml(message);
        feedbackLabel.setStyle('color:red');
        setTimeout(function(){ feedbackLabel.setHtml('');}, 5000);
    },

    setSuccess: function(message) {
        var feedbackLabel= this.down('#feedbackLabel');
        feedbackLabel.setHtml(message);
        feedbackLabel.setStyle('color:green');
        setTimeout(function(){ feedbackLabel.setHtml('');}, 5000);
    }

});